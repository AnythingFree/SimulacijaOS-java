
					
Zadatak Asemblera je da prevede tekst koji pise u .asm datoteci u masinski kod koji ce da izvrsi procesor.




Ovaj asembler nema registre. Umjesto toga se koristi stack.
Ono sto je u simulaciji na vjezbama bilo: ADD A, 123
Ovde ce da se pise: ADD
					broj koji je u A
					123				
->DAKLE ASEMBLERSKI JEZIK JE DRUGACIJI NEGO STO JE BIO U SIMULACIJI (ALI MALO)	
					
Asembler radi sa RAM memorijom. Kada Asembler_interpreter prevede u masinski kod, CPU cita taj kod i mijenja vrijednosti u RAM memoriji zavisno od koda.
To je druga polovina posla.


INSTRUKCIJE [asembler: masinski kod (binarno dec)]:
hlt 0000 0
add 0001 1
sub 0010 2
mul 0011 3
dec 0100 4
inc 0101 5
div 0110 6
===ako stignemo (necemo za pocetak sa labelama)=====
mov [labela] ??
cmp 0111 7
jmp 1000 8
jmpe 1001 9
jmpc 1010 10
call 1011 11
ret 1100 12
======================

